{"ast":null,"code":"import _defineProperty from \"/Users/jodyneckles/Dropbox/03_Development/code/projects/News-Digester-Frontend/node_modules/@babel/runtime/helpers/esm/defineProperty\";\nimport _objectSpread from \"/Users/jodyneckles/Dropbox/03_Development/code/projects/News-Digester-Frontend/node_modules/@babel/runtime/helpers/esm/objectSpread\";\nimport _toConsumableArray from \"/Users/jodyneckles/Dropbox/03_Development/code/projects/News-Digester-Frontend/node_modules/@babel/runtime/helpers/esm/toConsumableArray\";\nimport _classCallCheck from \"/Users/jodyneckles/Dropbox/03_Development/code/projects/News-Digester-Frontend/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/jodyneckles/Dropbox/03_Development/code/projects/News-Digester-Frontend/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/jodyneckles/Dropbox/03_Development/code/projects/News-Digester-Frontend/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/jodyneckles/Dropbox/03_Development/code/projects/News-Digester-Frontend/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/jodyneckles/Dropbox/03_Development/code/projects/News-Digester-Frontend/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/jodyneckles/Dropbox/03_Development/code/projects/News-Digester-Frontend/src/containers/Digest/Digest.js\";\nimport React, { Component } from 'react';\nimport { Route, Link } from 'react-router-dom';\nimport StorySearch from '../../components/StorySearch';\nimport StoryFilterSelector from '../../containers/StoryFilterSelector/StoryFilterSelector';\nimport StoryFilterResultsBar from '../StoryFilterResultsBar/StoryFilterResultsBar';\nimport StoryContent from '../../components/StoryContent/StoryContent';\nimport Stories from '../Stories/Stories';\nimport './Digest.css'; // import { unique } from '../../helpers'\n\nvar newStoriesUrl = 'http://localhost:3001/api/v1/stories';\nvar savedStoriesUrl = 'http://localhost:3001/api/v1/saved-stories';\nvar baseURL = 'http://localhost:3001/api/v1/';\n\nvar cheerio = require('cheerio');\n\nvar axios = require('axios');\n\nvar Digest =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(Digest, _Component);\n\n  function Digest() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, Digest);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(Digest)).call.apply(_getPrototypeOf2, [this].concat(args)));\n    _this.state = {\n      stories: [],\n      searchedStories: [],\n      searchQuery: undefined,\n      selectedStory: undefined,\n      filterMetadata: {\n        websites: [],\n        categories: []\n      },\n      selectedFilters: {\n        websites: [],\n        categories: []\n      },\n      showFilters: false,\n      showSavedStories: false,\n      selectedStoryContentText: undefined,\n      currentUserId: 1\n    };\n\n    _this.getStoriesFromAPI = function () {\n      return fetch(newStoriesUrl).then(function (res) {\n        return res.json();\n      });\n    };\n\n    _this.getSavedStoriesFromApi = function () {\n      return fetch(savedStoriesUrl).then(function (res) {\n        return res.json();\n      });\n    };\n\n    _this.storyLikedByCurrentUser = function (story) {\n      var userIds = story.users.map(function (user) {\n        return user.id;\n      });\n      return userIds.includes(_this.state.currentUserId);\n    };\n\n    _this.addLikesToState = function () {\n      var storyClone = _toConsumableArray(_this.state.stories);\n\n      var likeStories = storyClone.map(function (story) {\n        return _this.storyLikedByCurrentUser(story) ? _objectSpread({}, story, {\n          liked: true\n        }) : story;\n      });\n\n      _this.setState({\n        stories: likeStories\n      });\n    };\n\n    _this.getStoriesOrLikeStories = function () {\n      return _this.state.showSavedStories ? _this.state.stories.filter(function (story) {\n        return story.liked;\n      }) : _this.state.stories;\n    };\n\n    _this.getSearchedStories = function (searchQuery) {\n      return _this.getStoriesOrLikeStories().filter(function (story) {\n        return story.title.toLowerCase().includes(searchQuery.toLowerCase());\n      });\n    };\n\n    _this.handleSearchInput = function (event) {\n      _this.setState({\n        searchQuery: event.target.value\n      });\n    };\n\n    _this.getStories = function () {\n      var searchQuery = _this.state.searchQuery;\n\n      if (searchQuery === undefined) {\n        return _this.getStoriesOrLikeStories();\n      } else {\n        return _this.getSearchedStories(searchQuery);\n      }\n    };\n\n    _this.filteredStories = function () {\n      var selectedFilters = _this.state.selectedFilters;\n      return _this.getStories().filter(function (story) {\n        return selectedFilters.websites.length ? selectedFilters.websites.includes(story.website.name) : true;\n      }).filter(function (story) {\n        return selectedFilters.categories.length ? selectedFilters.categories.includes(story.category.name) : true;\n      });\n    };\n\n    _this.toggleFilter = function (value, type) {\n      var newValues = _toConsumableArray(_this.state.selectedFilters[type]);\n\n      newValues = newValues.includes(value) ? newValues.filter(function (item) {\n        return item !== value;\n      }) : [].concat(_toConsumableArray(newValues), [value]);\n\n      _this.setState({\n        selectedFilters: _objectSpread({}, _this.state.selectedFilters, _defineProperty({}, type, newValues))\n      });\n    };\n\n    _this.createLikeInServer = function (id) {\n      fetch(baseURL + 'user_stories/create', {\n        method: 'POST',\n        headers: {\n          'Accept': 'application/json',\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n          story_id: id,\n          user_id: _this.state.currentUserId\n        })\n      });\n    };\n\n    _this.deleteLikeInServer = function (id) {\n      fetch(baseURL + 'user_stories/delete', {\n        method: 'POST',\n        headers: {\n          'Accept': 'application/json',\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n          story_id: id,\n          user_id: _this.state.currentUserId\n        })\n      });\n    };\n\n    _this.toggleLike = function (event, id) {\n      event.stopPropagation();\n      event.preventDefault();\n\n      var selectedStory = _this.state.stories.find(function (stateStory) {\n        return stateStory.id === parseInt(id);\n      });\n\n      var storyClone = _toConsumableArray(_this.state.stories);\n\n      var likeStories = storyClone.map(function (story) {\n        return story.id === id ? _objectSpread({}, story, {\n          liked: !story.liked\n        }) : story;\n      });\n\n      _this.setState({\n        stories: likeStories\n      });\n\n      selectedStory.liked ? _this.deleteLikeInServer(id) : _this.createLikeInServer(id);\n    };\n\n    _this.setSelectedStory = function (story) {\n      var app = document.querySelector('.App');\n      app.classList.add('popup_is_shown');\n\n      _this.setState({\n        selectedStory: story\n      });\n\n      _this.retrieveStoryContentText(story);\n    };\n\n    _this.getSelectedStory = function (id) {\n      var selectedStory = _this.state.stories.find(function (stateStory) {\n        return stateStory.id === parseInt(id);\n      });\n\n      if (selectedStory && !_this.state.selectedStoryContentText) {\n        _this.retrieveStoryContentText(selectedStory);\n\n        var app = document.querySelector('.App');\n        app.classList.add('popup_is_shown');\n      }\n\n      return selectedStory;\n    };\n\n    _this.clearSelectedStory = function () {\n      var app = document.querySelector('.App');\n      app.classList.remove('popup_is_shown');\n\n      _this.setState({\n        selectedStory: undefined\n      });\n    };\n\n    _this.handleShowFilters = function () {\n      _this.setState({\n        showFilters: !_this.state.showFilters\n      });\n    };\n\n    _this.handleShowSavedStories = function (event) {\n      event.preventDefault();\n\n      _this.setState({\n        showSavedStories: !_this.state.showSavedStories\n      });\n    };\n\n    _this.scraperIndependent = function (story) {\n      var storyUrl = story.link;\n      axios.get(storyUrl).then(function (res) {\n        var nodeList = cheerio.load(res.data)('.body-content p');\n        var newList = nodeList.filter(function (i) {\n          return !_toConsumableArray(nodeList[i].children).some(function (el) {\n            return el.name === 'span';\n          });\n        });\n\n        _this.setState({\n          selectedStoryContentText: newList\n        });\n      });\n    };\n\n    _this.scraperGuardian = function (story) {\n      var storyUrl = story.link;\n      axios.get(storyUrl).then(function (res) {\n        var newList = cheerio.load(res.data)('.content__article-body p');\n\n        _this.setState({\n          selectedStoryContentText: newList\n        });\n      });\n    };\n\n    _this.scraperReuters = function (story) {\n      var storyUrl = story.link;\n      axios.get(storyUrl).then(function (res) {\n        var newList = cheerio.load(res.data)('.StandardArticleBody_body p');\n\n        _this.setState({\n          selectedStory: story,\n          selectedStoryContentText: newList\n        });\n      });\n    };\n\n    _this.scraperBBC = function (story) {\n      var storyUrl = story.link;\n      axios.get(storyUrl).then(function (res) {\n        var newList = cheerio.load(res.data)('.story-body__inner p');\n\n        _this.setState({\n          selectedStory: story,\n          selectedStoryContentText: newList\n        });\n      });\n    };\n\n    _this.retrieveStoryContentText = function (story) {\n      var storyScrapeResult = {\n        'Guardian': _this.scraperGuardian,\n        'Reuters': _this.scraperReuters,\n        'BBC': _this.scraperBBC,\n        'Independent': _this.scraperIndependent\n      };\n      var website = story.website.name;\n      return storyScrapeResult[website](story); // envoke ONLY the relevent method above\n    };\n\n    return _this;\n  }\n\n  _createClass(Digest, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      var _this2 = this;\n\n      this.getStoriesFromAPI().then(function (allStories) {\n        var uniqueWebsites = _toConsumableArray(new Set(allStories.map(function (item) {\n          return item.website.name;\n        })));\n\n        var uniqueCategories = _toConsumableArray(new Set(allStories.map(function (item) {\n          return item.category.name;\n        }))); // ES6 Spread Operator and Set return a UNIQUE array\n\n\n        _this2.setState({\n          stories: allStories,\n          filterMetadata: {\n            websites: uniqueWebsites,\n            categories: uniqueCategories\n          }\n        });\n      }).then(function () {\n        return _this2.addLikesToState();\n      });\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this3 = this;\n\n      var toggleLike = this.toggleLike,\n          handleSearchInput = this.handleSearchInput,\n          setSelectedStory = this.setSelectedStory,\n          getSelectedStory = this.getSelectedStory,\n          clearSelectedStory = this.clearSelectedStory,\n          filteredStories = this.filteredStories,\n          toggleFilter = this.toggleFilter;\n      return React.createElement(\"div\", {\n        className: \"App\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 255\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 256\n        },\n        __self: this\n      }, React.createElement(\"img\", {\n        src: require('../../icons/news-digest-logo.svg'),\n        alt: \"news-digest-logo\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 257\n        },\n        __self: this\n      }), React.createElement(\"h1\", {\n        className: \"news-digest-title\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 258\n        },\n        __self: this\n      }, \"NEWS DIGEST\")), React.createElement(\"h3\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 261\n        },\n        __self: this\n      }, \"Hi, \", this.props.currentUser.user), React.createElement(Link, {\n        to: \"/\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 262\n        },\n        __self: this\n      }, React.createElement(\"button\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 262\n        },\n        __self: this\n      }, \"Logout\")), React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 263\n        },\n        __self: this\n      }, !this.state.showFilters && React.createElement(StorySearch, {\n        style: {\n          margin: '0 auto',\n          maxWidth: 800\n        },\n        handleSearchInput: handleSearchInput,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 265\n        },\n        __self: this\n      })), React.createElement(\"div\", {\n        className: \"filter-container\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 271\n        },\n        __self: this\n      }, this.state.showFilters ? React.createElement(\"button\", {\n        className: 'close-btn',\n        onClick: this.handleShowFilters,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 273\n        },\n        __self: this\n      }, \"CLOSE\") : React.createElement(\"button\", {\n        className: this.state.showFilters && 'filter-btn',\n        onClick: this.handleShowFilters,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 274\n        },\n        __self: this\n      }, \"FILTER\")), React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 278\n        },\n        __self: this\n      }, this.state.showFilters && React.createElement(StoryFilterSelector, {\n        filterTags: this.state.filterMetadata,\n        toggleFilter: toggleFilter,\n        selectedWebsites: this.state.selectedFilters.websites,\n        selectedCategories: this.state.selectedFilters.categories,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 282\n        },\n        __self: this\n      }), !this.state.showFilters && React.createElement(StoryFilterResultsBar, {\n        filterTags: this.state.filterMetadata,\n        toggleFilter: toggleFilter,\n        selectedWebsites: this.state.selectedFilters.websites,\n        selectedCategories: this.state.selectedFilters.categories,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 290\n        },\n        __self: this\n      }), this.state.showSavedStories ? React.createElement(Link, {\n        to: \"/stories\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 299\n        },\n        __self: this\n      }, React.createElement(\"button\", {\n        className: 'saved-stories-back-to-feed-btn',\n        onClick: this.handleShowSavedStories,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 299\n        },\n        __self: this\n      }, \"BACK TO FEED\")) : React.createElement(Link, {\n        to: \"/stories/saved\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 300\n        },\n        __self: this\n      }, React.createElement(\"button\", {\n        className: this.state.showSavedStories && 'saved-stories-btn',\n        onClick: this.handleShowSavedStories,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 300\n        },\n        __self: this\n      }, \"SAVED STORIES\")), React.createElement(\"div\", {\n        className: this.state.selectedStory ? 'show_story content_wrapper' : 'content_wrapper',\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 303\n        },\n        __self: this\n      }, React.createElement(Stories, {\n        getStories: filteredStories,\n        toggleLike: toggleLike,\n        setSelectedStory: setSelectedStory,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 305\n        },\n        __self: this\n      }), React.createElement(Route, {\n        exact: true,\n        path: \"/stories/:id\",\n        component: function component(routerProps) {\n          return React.createElement(StoryContent, Object.assign({\n            selectedStory: getSelectedStory(routerProps.match.params.id),\n            selectedStoryContentText: _this3.state.selectedStoryContentText,\n            toggleLike: toggleLike,\n            clearSelectedStory: clearSelectedStory\n          }, routerProps, {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 312\n            },\n            __self: this\n          }));\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 311\n        },\n        __self: this\n      }))));\n    }\n  }]);\n\n  return Digest;\n}(Component);\n\nexport default Digest;","map":{"version":3,"sources":["/Users/jodyneckles/Dropbox/03_Development/code/projects/News-Digester-Frontend/src/containers/Digest/Digest.js"],"names":["React","Component","Route","Link","StorySearch","StoryFilterSelector","StoryFilterResultsBar","StoryContent","Stories","newStoriesUrl","savedStoriesUrl","baseURL","cheerio","require","axios","Digest","state","stories","searchedStories","searchQuery","undefined","selectedStory","filterMetadata","websites","categories","selectedFilters","showFilters","showSavedStories","selectedStoryContentText","currentUserId","getStoriesFromAPI","fetch","then","res","json","getSavedStoriesFromApi","storyLikedByCurrentUser","story","userIds","users","map","user","id","includes","addLikesToState","storyClone","likeStories","liked","setState","getStoriesOrLikeStories","filter","getSearchedStories","title","toLowerCase","handleSearchInput","event","target","value","getStories","filteredStories","length","website","name","category","toggleFilter","type","newValues","item","createLikeInServer","method","headers","body","JSON","stringify","story_id","user_id","deleteLikeInServer","toggleLike","stopPropagation","preventDefault","find","stateStory","parseInt","setSelectedStory","app","document","querySelector","classList","add","retrieveStoryContentText","getSelectedStory","clearSelectedStory","remove","handleShowFilters","handleShowSavedStories","scraperIndependent","storyUrl","link","get","nodeList","load","data","newList","i","children","some","el","scraperGuardian","scraperReuters","scraperBBC","storyScrapeResult","allStories","uniqueWebsites","Set","uniqueCategories","props","currentUser","margin","maxWidth","routerProps","match","params"],"mappings":"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","sourcesContent":["import React, { Component } from 'react'\nimport { Route, Link } from 'react-router-dom'\n\nimport StorySearch from '../../components/StorySearch'\nimport StoryFilterSelector from '../../containers/StoryFilterSelector/StoryFilterSelector'\nimport StoryFilterResultsBar from '../StoryFilterResultsBar/StoryFilterResultsBar'\nimport StoryContent from '../../components/StoryContent/StoryContent'\nimport Stories from '../Stories/Stories'\nimport './Digest.css'\n\n// import { unique } from '../../helpers'\n\nconst newStoriesUrl = 'http://localhost:3001/api/v1/stories'\nconst savedStoriesUrl = 'http://localhost:3001/api/v1/saved-stories'\nconst baseURL = 'http://localhost:3001/api/v1/'\nconst cheerio = require('cheerio')\nconst axios = require('axios')\n\nclass Digest extends Component {\n  state = {\n    stories: [],\n    searchedStories: [],\n    searchQuery: undefined,\n    selectedStory: undefined,\n    filterMetadata: {\n      websites: [],\n      categories: []\n    },\n    selectedFilters: {\n      websites: [],\n      categories: []\n    },\n    showFilters: false,\n    showSavedStories: false,\n    selectedStoryContentText: undefined,\n    currentUserId: 1\n  }\n\n  getStoriesFromAPI = () => {\n    return fetch(newStoriesUrl)\n      .then(res => res.json())\n  }\n\n  getSavedStoriesFromApi = () => {\n    return fetch(savedStoriesUrl)\n      .then(res => res.json())\n  }\n\n  storyLikedByCurrentUser = (story) => {\n    const userIds = story.users.map(user => user.id)\n    return userIds.includes(this.state.currentUserId)\n  }\n\n  addLikesToState = () => {\n    const storyClone = [...this.state.stories]\n    const likeStories = storyClone.map(story =>\n      this.storyLikedByCurrentUser(story) ? { ...story, liked: true } : story\n    )\n    this.setState({ stories: likeStories })\n  }\n\n  componentDidMount () {\n    this.getStoriesFromAPI()\n      .then(allStories => {\n        const uniqueWebsites = [...new Set(allStories.map(item => item.website.name))]\n        const uniqueCategories = [...new Set(allStories.map(item => item.category.name))] // ES6 Spread Operator and Set return a UNIQUE array\n        this.setState({\n          stories: allStories,\n          filterMetadata: {\n            websites: uniqueWebsites,\n            categories: uniqueCategories\n          }\n        })\n      }).then(() => this.addLikesToState())\n  }\n\n  getStoriesOrLikeStories = () => {\n    return this.state.showSavedStories\n      ? this.state.stories.filter(story => story.liked)\n      : this.state.stories\n  }\n\n  getSearchedStories = (searchQuery) => this.getStoriesOrLikeStories().filter(story => story.title.toLowerCase().includes(searchQuery.toLowerCase()))\n\n  handleSearchInput = (event) => {\n    this.setState({\n      searchQuery: event.target.value\n    })\n  }\n\n  getStories = () => {\n    const { searchQuery } = this.state\n    if (searchQuery === undefined) {\n      return this.getStoriesOrLikeStories()\n    } else {\n      return this.getSearchedStories(searchQuery)\n    }\n  }\n\n  // areFiltersEmpty = () => this.state.selectedFilters.website.length\n\n  filteredStories = () => {\n    const { selectedFilters } = this.state\n    return this.getStories().filter(story =>\n      selectedFilters.websites.length ? selectedFilters.websites.includes(story.website.name) : true\n    ).filter(story => selectedFilters.categories.length ? selectedFilters.categories.includes(story.category.name) : true)\n  }\n\n  toggleFilter = (value, type) => {\n    let newValues = [...this.state.selectedFilters[type]]\n    newValues = newValues.includes(value) ? newValues.filter(item => item !== value) : [...newValues, value]\n    this.setState({\n      selectedFilters: {\n        ...this.state.selectedFilters,\n        [type]: newValues\n      }\n    })\n  }\n\n  createLikeInServer = id => {\n    fetch(baseURL + 'user_stories/create', {\n      method: 'POST',\n      headers: {\n        'Accept': 'application/json',\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify({\n        story_id: id,\n        user_id: this.state.currentUserId\n      })\n    })\n  }\n\n  deleteLikeInServer = id => {\n    fetch(baseURL + 'user_stories/delete', {\n      method: 'POST',\n      headers: {\n        'Accept': 'application/json',\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify({\n        story_id: id,\n        user_id: this.state.currentUserId\n      })\n    })\n  }\n\n  toggleLike = (event, id) => {\n    event.stopPropagation()\n    event.preventDefault()\n    const selectedStory = this.state.stories.find(stateStory => stateStory.id === parseInt(id))\n    const storyClone = [...this.state.stories]\n    const likeStories = storyClone.map(story =>\n      story.id === id ? { ...story, liked: !story.liked } : story\n    )\n    this.setState({ stories: likeStories })\n    selectedStory.liked ? this.deleteLikeInServer(id) : this.createLikeInServer(id)\n  }\n\n  setSelectedStory = story => {\n    const app = document.querySelector('.App')\n    app.classList.add('popup_is_shown')\n    this.setState({ selectedStory: story })\n    this.retrieveStoryContentText(story)\n  }\n\n  getSelectedStory = id => {\n    const selectedStory = this.state.stories.find(stateStory => stateStory.id === parseInt(id))\n    if (selectedStory && !this.state.selectedStoryContentText) {\n      this.retrieveStoryContentText(selectedStory)\n      const app = document.querySelector('.App')\n      app.classList.add('popup_is_shown')\n    }\n    return selectedStory\n  }\n\n  clearSelectedStory = () => {\n    const app = document.querySelector('.App')\n    app.classList.remove('popup_is_shown')\n\n    this.setState({ selectedStory: undefined })\n  }\n\n  handleShowFilters = () => {\n    this.setState({\n      showFilters: !this.state.showFilters\n    })\n  }\n\n  handleShowSavedStories = (event) => {\n    event.preventDefault()\n    this.setState({\n      showSavedStories: !this.state.showSavedStories\n    })\n  }\n\n  scraperIndependent = (story) => {\n    const storyUrl = story.link\n    axios.get(storyUrl).then((res) => {\n      const nodeList = cheerio.load(res.data)('.body-content p')\n      const newList = nodeList.filter(i => ![...nodeList[i].children].some(el => el.name === 'span'))\n      this.setState({\n        selectedStoryContentText: newList\n      })\n    })\n  }\n\n  scraperGuardian = (story) => {\n    const storyUrl = story.link\n    axios.get(storyUrl).then((res) => {\n      const newList = cheerio.load(res.data)('.content__article-body p')\n      this.setState({\n        selectedStoryContentText: newList\n      })\n    })\n  }\n\n  scraperReuters = (story) => {\n    const storyUrl = story.link\n    axios.get(storyUrl).then((res) => {\n      const newList = cheerio.load(res.data)('.StandardArticleBody_body p')\n      this.setState({\n        selectedStory: story,\n        selectedStoryContentText: newList\n      })\n    })\n  }\n\n  scraperBBC = (story) => {\n    const storyUrl = story.link\n    axios.get(storyUrl).then((res) => {\n      const newList = cheerio.load(res.data)('.story-body__inner p')\n      this.setState({\n        selectedStory: story,\n        selectedStoryContentText: newList\n      })\n    })\n  }\n\n  retrieveStoryContentText = (story) => {\n    const storyScrapeResult = {\n      'Guardian': this.scraperGuardian,\n      'Reuters': this.scraperReuters,\n      'BBC': this.scraperBBC,\n      'Independent': this.scraperIndependent\n    }\n\n    const website = story.website.name\n    return (storyScrapeResult[website])(story) // envoke ONLY the relevent method above\n  }\n\n  render () {\n    const { toggleLike, handleSearchInput, setSelectedStory, getSelectedStory, clearSelectedStory, filteredStories, toggleFilter } = this\n    return (\n      <div className='App'>\n        <div>\n          <img src={require('../../icons/news-digest-logo.svg')} alt='news-digest-logo' />\n          <h1 className='news-digest-title'>NEWS DIGEST</h1>\n        </div>\n\n        <h3>Hi, {(this.props.currentUser.user)}</h3>\n        <Link to='/'><button>Logout</button></Link>\n        <div>\n          {\n            !this.state.showFilters && <StorySearch\n              style={{ margin: '0 auto', maxWidth: 800 }}\n              handleSearchInput={handleSearchInput}\n            />\n          }\n        </div>\n        <div className='filter-container'>\n          {this.state.showFilters\n            ? <button className={'close-btn'} onClick={this.handleShowFilters}>CLOSE</button>\n            : <button className={this.state.showFilters && 'filter-btn'} onClick={this.handleShowFilters}>FILTER</button>\n          }\n        </div>\n\n        <div>\n\n          {\n            this.state.showFilters &&\n            <StoryFilterSelector\n              filterTags={this.state.filterMetadata}\n              toggleFilter={toggleFilter}\n              selectedWebsites={this.state.selectedFilters.websites}\n              selectedCategories={this.state.selectedFilters.categories}\n            />\n          }\n          {\n            !this.state.showFilters && <StoryFilterResultsBar\n              filterTags={this.state.filterMetadata}\n              toggleFilter={toggleFilter}\n              selectedWebsites={this.state.selectedFilters.websites}\n              selectedCategories={this.state.selectedFilters.categories}\n            />\n\n          }\n          {this.state.showSavedStories\n            ? <Link to='/stories'><button className={'saved-stories-back-to-feed-btn'} onClick={this.handleShowSavedStories}>BACK TO FEED</button></Link>\n            : <Link to='/stories/saved'><button className={this.state.showSavedStories && 'saved-stories-btn'} onClick={this.handleShowSavedStories}>SAVED STORIES</button></Link>\n          }\n\n          <div className={this.state.selectedStory ? 'show_story content_wrapper' : 'content_wrapper'}>\n\n            <Stories\n              getStories={filteredStories}\n              toggleLike={toggleLike}\n              setSelectedStory={setSelectedStory}\n            />\n\n            <Route exact path='/stories/:id' component={routerProps => {\n              return <StoryContent\n                selectedStory={getSelectedStory(routerProps.match.params.id)}\n                selectedStoryContentText={this.state.selectedStoryContentText}\n                toggleLike={toggleLike}\n                clearSelectedStory={clearSelectedStory}\n                {...routerProps}\n              />\n            }\n            }\n            />\n          </div>\n        </div>\n      </div>\n    )\n  }\n}\n\nexport default Digest\n"]},"metadata":{},"sourceType":"module"}
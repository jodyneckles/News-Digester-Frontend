{"ast":null,"code":"import _objectSpread from \"/Users/jodyneckles/Dropbox/03_Development/code/projects/News-Digester-Frontend/node_modules/@babel/runtime/helpers/esm/objectSpread\";\nimport _classCallCheck from \"/Users/jodyneckles/Dropbox/03_Development/code/projects/News-Digester-Frontend/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/jodyneckles/Dropbox/03_Development/code/projects/News-Digester-Frontend/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/jodyneckles/Dropbox/03_Development/code/projects/News-Digester-Frontend/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/jodyneckles/Dropbox/03_Development/code/projects/News-Digester-Frontend/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/jodyneckles/Dropbox/03_Development/code/projects/News-Digester-Frontend/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/jodyneckles/Dropbox/03_Development/code/projects/News-Digester-Frontend/src/containers/Digest.js\";\nimport React, { Component } from 'react';\nimport StorySearch from '../components/StorySearch'; // import StoryFilter from '../components/StoryFilter'\n\nimport StoryContent from '../components/StoryContent';\nimport Stories from './Stories';\nvar url = 'http://localhost:3001/api/v1/stories';\n\nvar Digest =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(Digest, _Component);\n\n  function Digest() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, Digest);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(Digest)).call.apply(_getPrototypeOf2, [this].concat(args)));\n    _this.state = {\n      stories: [],\n      searchedStories: [],\n      searchQuery: undefined\n    };\n\n    _this.getStoriesFromAPI = function () {\n      return fetch(url).then(function (res) {\n        return res.json();\n      });\n    };\n\n    _this.getSearchedStories = function (searchQuery) {\n      return _this.state.stories.filter(function (story) {\n        return story.title.toLowerCase().includes(searchQuery.toLowerCase());\n      });\n    };\n\n    _this.handleSearchInput = function (event) {\n      _this.setState({\n        searchQuery: event.target.value\n      });\n    };\n\n    _this.getStories = function () {\n      console.log(_this.state.stories);\n      var _this$state = _this.state,\n          stories = _this$state.stories,\n          searchQuery = _this$state.searchQuery,\n          getSearchedStories = _this$state.getSearchedStories;\n\n      if (searchQuery === undefined) {\n        return stories;\n      } else {\n        return getSearchedStories(searchQuery);\n      }\n    };\n\n    _this.toggleLike = function (id) {\n      var stories = _this.state.stories.map(function (story) {\n        return story.id === id ? _objectSpread({}, story, {\n          liked: !story.liked\n        }) : story;\n      });\n\n      _this.setState({\n        stories: stories\n      });\n    };\n\n    _this.selectedStory = function (e) {\n      return _this.state.stories.find(function (story) {\n        return e.target.value === story;\n      });\n    };\n\n    return _this;\n  }\n\n  _createClass(Digest, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      var _this2 = this;\n\n      this.getStoriesFromAPI().then(function (allStories) {\n        return _this2.setState({\n          stories: allStories\n        });\n      });\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var toggleLike = this.toggleLike,\n          handleSearchInput = this.handleSearchInput,\n          selectedStory = this.selectedStory,\n          getStories = this.getStories;\n      return React.createElement(\"div\", {\n        className: \"App\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 62\n        },\n        __self: this\n      }, React.createElement(StorySearch, {\n        style: {\n          margin: '0 auto',\n          maxWidth: 800\n        },\n        handleSearchInput: handleSearchInput,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 63\n        },\n        __self: this\n      }), React.createElement(Stories, {\n        getStories: getStories,\n        toggleLike: toggleLike,\n        selectedStory: selectedStory,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 68\n        },\n        __self: this\n      }), React.createElement(StoryContent, {\n        toggleLike: toggleLike,\n        selectedStory: selectedStory,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 73\n        },\n        __self: this\n      }));\n    }\n  }]);\n\n  return Digest;\n}(Component);\n\nexport default Digest;","map":{"version":3,"sources":["/Users/jodyneckles/Dropbox/03_Development/code/projects/News-Digester-Frontend/src/containers/Digest.js"],"names":["React","Component","StorySearch","StoryContent","Stories","url","Digest","state","stories","searchedStories","searchQuery","undefined","getStoriesFromAPI","fetch","then","res","json","getSearchedStories","filter","story","title","toLowerCase","includes","handleSearchInput","event","setState","target","value","getStories","console","log","toggleLike","id","map","liked","selectedStory","e","find","allStories","margin","maxWidth"],"mappings":"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","sourcesContent":["import React, { Component } from 'react'\n\nimport StorySearch from '../components/StorySearch'\n// import StoryFilter from '../components/StoryFilter'\nimport StoryContent from '../components/StoryContent'\nimport Stories from './Stories'\n\nconst url = 'http://localhost:3001/api/v1/stories'\n\nclass Digest extends Component {\n  state = {\n    stories: [],\n    searchedStories: [],\n    searchQuery: undefined\n  }\n\n  getStoriesFromAPI = () => {\n    return fetch(url)\n      .then(res => res.json())\n  }\n\n  componentDidMount () {\n    this.getStoriesFromAPI()\n      .then(allStories => this.setState(\n        {\n          stories: allStories\n        }\n      ))\n  }\n\n  getSearchedStories = (searchQuery) => this.state.stories.filter(story => story.title.toLowerCase().includes(searchQuery.toLowerCase()))\n\n  handleSearchInput = (event) => {\n    this.setState({\n      searchQuery: event.target.value\n    })\n  }\n\n  getStories = () => {\n    console.log(this.state.stories)\n\n    const { stories, searchQuery, getSearchedStories } = this.state\n    if (searchQuery === undefined) {\n      return stories\n    } else {\n      return getSearchedStories(searchQuery)\n    }\n  }\n\n  toggleLike = id => {\n    const stories = this.state.stories.map(story =>\n      story.id === id ? { ...story, liked: !story.liked } : story\n    )\n    this.setState({ stories })\n  }\n\n  selectedStory = (e) => this.state.stories.find(story => e.target.value === story)\n\n  render () {\n    const { toggleLike, handleSearchInput, selectedStory, getStories } = this\n    return (\n      <div className='App'>\n        <StorySearch\n          style={{ margin: '0 auto', maxWidth: 800 }}\n          handleSearchInput={handleSearchInput}\n        />\n        {/* <StoryFilter /> */}\n        <Stories\n          getStories={getStories}\n          toggleLike={toggleLike}\n          selectedStory={selectedStory}\n        />\n        <StoryContent\n          toggleLike={toggleLike}\n          selectedStory={selectedStory}\n        />\n      </div>\n    )\n  }\n}\n\nexport default Digest\n"]},"metadata":{},"sourceType":"module"}
{"ast":null,"code":"import _toConsumableArray from \"/Users/jodyneckles/Dropbox/03_Development/code/projects/News-Digester-Frontend/node_modules/@babel/runtime/helpers/esm/toConsumableArray\";\nimport _objectSpread from \"/Users/jodyneckles/Dropbox/03_Development/code/projects/News-Digester-Frontend/node_modules/@babel/runtime/helpers/esm/objectSpread\";\nimport _classCallCheck from \"/Users/jodyneckles/Dropbox/03_Development/code/projects/News-Digester-Frontend/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/jodyneckles/Dropbox/03_Development/code/projects/News-Digester-Frontend/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/jodyneckles/Dropbox/03_Development/code/projects/News-Digester-Frontend/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/jodyneckles/Dropbox/03_Development/code/projects/News-Digester-Frontend/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/jodyneckles/Dropbox/03_Development/code/projects/News-Digester-Frontend/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/jodyneckles/Dropbox/03_Development/code/projects/News-Digester-Frontend/src/containers/Digest/Digest.js\";\nimport React, { Component } from 'react';\nimport StorySearch from '../../components/StorySearch';\nimport StoryFilterSelector from '../../containers/StoryFilterSelector/StoryFilterSelector';\nimport StoryContent from '../../components/StoryContent/StoryContent';\nimport Stories from '../Stories/Stories';\nimport './Digest.css'; // import { unique } from '../../helpers'\n\nvar url = 'http://localhost:3001/api/v1/stories';\n\nvar Digest =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(Digest, _Component);\n\n  function Digest() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, Digest);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(Digest)).call.apply(_getPrototypeOf2, [this].concat(args)));\n    _this.state = {\n      stories: [],\n      searchedStories: [],\n      searchQuery: undefined,\n      selectedStory: undefined,\n      filterMetadata: {\n        websites: [],\n        categories: []\n      }\n    };\n\n    _this.getStoriesFromAPI = function () {\n      return fetch(url).then(function (res) {\n        return res.json();\n      });\n    };\n\n    _this.getSearchedStories = function (searchQuery) {\n      return _this.state.stories.filter(function (story) {\n        return story.title.toLowerCase().includes(searchQuery.toLowerCase());\n      });\n    };\n\n    _this.handleSearchInput = function (event) {\n      _this.setState({\n        searchQuery: event.target.value\n      });\n    };\n\n    _this.getStories = function () {\n      var _this$state = _this.state,\n          stories = _this$state.stories,\n          searchQuery = _this$state.searchQuery;\n\n      if (searchQuery === undefined) {\n        return stories;\n      } else {\n        return _this.getSearchedStories(searchQuery);\n      }\n    };\n\n    _this.areFiltersEmpty = function () {\n      var filterMetadata = _this.state.filterMetadata;\n      return filterMetadata.websites.length === 0 && filterMetadata.categories.length === 0;\n    };\n\n    _this.filteredStories = function () {\n      var filterMetadata = _this.state.filterMetadata;\n      return _this.areFiltersEmpty() ? _this.getStories() : _this.getStories().filter(function (story) {\n        return filterMetadata.websites.includes(story.website.name) && filterMetadata.categories.includes(story.category.name);\n      });\n    };\n\n    _this.toggleLike = function (event, id) {\n      event.stopPropagation();\n\n      var likeStories = _this.state.stories.map(function (story) {\n        return story.id === id ? _objectSpread({}, story, {\n          liked: !story.liked\n        }) : story;\n      });\n\n      _this.setState({\n        likeStories: likeStories\n      });\n    };\n\n    _this.setSelectedStory = function (story) {\n      var app = document.querySelector('.App');\n      app.classList.add('popup_is_shown');\n\n      _this.setState({\n        selectedStory: story\n      });\n    };\n\n    _this.getSelectedStory = function (story) {\n      return _this.state.stories.find(function (stateStory) {\n        return stateStory.id === story.id;\n      });\n    };\n\n    _this.clearSelectedStory = function () {\n      var app = document.querySelector('.App');\n      app.classList.remove('popup_is_shown');\n\n      _this.setState({\n        selectedStory: undefined\n      });\n    };\n\n    return _this;\n  }\n\n  _createClass(Digest, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      var _this2 = this;\n\n      this.getStoriesFromAPI().then(function (allStories) {\n        var uniqueWebsites = _toConsumableArray(new Set(allStories.map(function (item) {\n          return item.website.name;\n        })));\n\n        var uniqueCategories = _toConsumableArray(new Set(allStories.map(function (item) {\n          return item.category.name;\n        }))); // ES6 Spread Operator and Set return a UNIQUE array\n\n\n        _this2.setState({\n          stories: allStories,\n          filteredMetadata: {\n            websites: uniqueWebsites,\n            categories: uniqueCategories\n          }\n        });\n      });\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      console.log('selected story:', this.state.selectedStory);\n      var toggleLike = this.toggleLike,\n          handleSearchInput = this.handleSearchInput,\n          setSelectedStory = this.setSelectedStory,\n          getSelectedStory = this.getSelectedStory,\n          clearSelectedStory = this.clearSelectedStory,\n          filteredStories = this.filteredStories,\n          toggleFilter = this.toggleFilter;\n      return React.createElement(\"div\", {\n        className: \"App\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 111\n        },\n        __self: this\n      }, React.createElement(\"img\", {\n        src: \"\",\n        alt: \"\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 112\n        },\n        __self: this\n      }), React.createElement(\"h1\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 113\n        },\n        __self: this\n      }, \"NEWS DIGEST\"), React.createElement(StorySearch, {\n        style: {\n          margin: '0 auto',\n          maxWidth: 800\n        },\n        handleSearchInput: handleSearchInput,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 114\n        },\n        __self: this\n      }), React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 118\n        },\n        __self: this\n      }, React.createElement(\"button\", {\n        className: \"saved-stories-btn\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 127\n        },\n        __self: this\n      }, \"SAVED STORIES\"), React.createElement(\"div\", {\n        className: this.state.selectedStory ? 'show_story content_wrapper' : 'content_wrapper',\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 129\n        },\n        __self: this\n      }, React.createElement(Stories, {\n        getStories: filteredStories,\n        toggleLike: toggleLike,\n        setSelectedStory: setSelectedStory,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 130\n        },\n        __self: this\n      }), React.createElement(StoryContent, {\n        selectedStory: this.state.selectedStory && getSelectedStory(this.state.selectedStory),\n        toggleLike: toggleLike,\n        clearSelectedStory: clearSelectedStory,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 135\n        },\n        __self: this\n      }))));\n    }\n  }]);\n\n  return Digest;\n}(Component);\n\nexport default Digest;","map":{"version":3,"sources":["/Users/jodyneckles/Dropbox/03_Development/code/projects/News-Digester-Frontend/src/containers/Digest/Digest.js"],"names":["React","Component","StorySearch","StoryFilterSelector","StoryContent","Stories","url","Digest","state","stories","searchedStories","searchQuery","undefined","selectedStory","filterMetadata","websites","categories","getStoriesFromAPI","fetch","then","res","json","getSearchedStories","filter","story","title","toLowerCase","includes","handleSearchInput","event","setState","target","value","getStories","areFiltersEmpty","length","filteredStories","website","name","category","toggleLike","id","stopPropagation","likeStories","map","liked","setSelectedStory","app","document","querySelector","classList","add","getSelectedStory","find","stateStory","clearSelectedStory","remove","allStories","uniqueWebsites","Set","item","uniqueCategories","filteredMetadata","console","log","toggleFilter","margin","maxWidth"],"mappings":";;;;;;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AAEA,OAAOC,WAAP,MAAwB,8BAAxB;AACA,OAAOC,mBAAP,MAAgC,0DAAhC;AACA,OAAOC,YAAP,MAAyB,4CAAzB;AACA,OAAOC,OAAP,MAAoB,oBAApB;AACA,OAAO,cAAP,C,CAEA;;AAEA,IAAMC,GAAG,GAAG,sCAAZ;;IAEMC,M;;;;;;;;;;;;;;;;;UACJC,K,GAAQ;AACNC,MAAAA,OAAO,EAAE,EADH;AAENC,MAAAA,eAAe,EAAE,EAFX;AAGNC,MAAAA,WAAW,EAAEC,SAHP;AAINC,MAAAA,aAAa,EAAED,SAJT;AAKNE,MAAAA,cAAc,EAAE;AACdC,QAAAA,QAAQ,EAAE,EADI;AAEdC,QAAAA,UAAU,EAAE;AAFE;AALV,K;;UAWRC,iB,GAAoB,YAAM;AACxB,aAAOC,KAAK,CAACZ,GAAD,CAAL,CACJa,IADI,CACC,UAAAC,GAAG;AAAA,eAAIA,GAAG,CAACC,IAAJ,EAAJ;AAAA,OADJ,CAAP;AAED,K;;UAiBDC,kB,GAAqB,UAACX,WAAD;AAAA,aAAiB,MAAKH,KAAL,CAAWC,OAAX,CAAmBc,MAAnB,CAA0B,UAAAC,KAAK;AAAA,eAAIA,KAAK,CAACC,KAAN,CAAYC,WAAZ,GAA0BC,QAA1B,CAAmChB,WAAW,CAACe,WAAZ,EAAnC,CAAJ;AAAA,OAA/B,CAAjB;AAAA,K;;UAErBE,iB,GAAoB,UAACC,KAAD,EAAW;AAC7B,YAAKC,QAAL,CAAc;AACZnB,QAAAA,WAAW,EAAEkB,KAAK,CAACE,MAAN,CAAaC;AADd,OAAd;AAGD,K;;UAEDC,U,GAAa,YAAM;AAAA,wBACgB,MAAKzB,KADrB;AAAA,UACTC,OADS,eACTA,OADS;AAAA,UACAE,WADA,eACAA,WADA;;AAEjB,UAAIA,WAAW,KAAKC,SAApB,EAA+B;AAC7B,eAAOH,OAAP;AACD,OAFD,MAEO;AACL,eAAO,MAAKa,kBAAL,CAAwBX,WAAxB,CAAP;AACD;AACF,K;;UAEDuB,e,GAAkB,YAAM;AAAA,UACdpB,cADc,GACK,MAAKN,KADV,CACdM,cADc;AAEtB,aAAOA,cAAc,CAACC,QAAf,CAAwBoB,MAAxB,KAAmC,CAAnC,IAAwCrB,cAAc,CAACE,UAAf,CAA0BmB,MAA1B,KAAqC,CAApF;AACD,K;;UAEDC,e,GAAkB,YAAM;AAAA,UACdtB,cADc,GACK,MAAKN,KADV,CACdM,cADc;AAEtB,aAAO,MAAKoB,eAAL,KACH,MAAKD,UAAL,EADG,GAEH,MAAKA,UAAL,GAAkBV,MAAlB,CAAyB,UAAAC,KAAK;AAAA,eAC9BV,cAAc,CAACC,QAAf,CAAwBY,QAAxB,CAAiCH,KAAK,CAACa,OAAN,CAAcC,IAA/C,KACAxB,cAAc,CAACE,UAAf,CAA0BW,QAA1B,CAAmCH,KAAK,CAACe,QAAN,CAAeD,IAAlD,CAF8B;AAAA,OAA9B,CAFJ;AAMD,K;;UASDE,U,GAAa,UAACX,KAAD,EAAQY,EAAR,EAAe;AAC1BZ,MAAAA,KAAK,CAACa,eAAN;;AACA,UAAMC,WAAW,GAAG,MAAKnC,KAAL,CAAWC,OAAX,CAAmBmC,GAAnB,CAAuB,UAAApB,KAAK;AAAA,eAC9CA,KAAK,CAACiB,EAAN,KAAaA,EAAb,qBAAuBjB,KAAvB;AAA8BqB,UAAAA,KAAK,EAAE,CAACrB,KAAK,CAACqB;AAA5C,aAAsDrB,KADR;AAAA,OAA5B,CAApB;;AAGA,YAAKM,QAAL,CAAc;AAAEa,QAAAA,WAAW,EAAXA;AAAF,OAAd;AACD,K;;UAEDG,gB,GAAmB,UAAAtB,KAAK,EAAI;AAC1B,UAAMuB,GAAG,GAAGC,QAAQ,CAACC,aAAT,CAAuB,MAAvB,CAAZ;AACAF,MAAAA,GAAG,CAACG,SAAJ,CAAcC,GAAd,CAAkB,gBAAlB;;AACA,YAAKrB,QAAL,CAAc;AAAEjB,QAAAA,aAAa,EAAEW;AAAjB,OAAd;AACD,K;;UAED4B,gB,GAAmB,UAAA5B,KAAK;AAAA,aAAI,MAAKhB,KAAL,CAAWC,OAAX,CAAmB4C,IAAnB,CAAwB,UAAAC,UAAU;AAAA,eAAIA,UAAU,CAACb,EAAX,KAAkBjB,KAAK,CAACiB,EAA5B;AAAA,OAAlC,CAAJ;AAAA,K;;UAExBc,kB,GAAqB,YAAM;AACzB,UAAMR,GAAG,GAAGC,QAAQ,CAACC,aAAT,CAAuB,MAAvB,CAAZ;AACAF,MAAAA,GAAG,CAACG,SAAJ,CAAcM,MAAd,CAAqB,gBAArB;;AAEA,YAAK1B,QAAL,CAAc;AAAEjB,QAAAA,aAAa,EAAED;AAAjB,OAAd;AACD,K;;;;;;;wCA3EoB;AAAA;;AACnB,WAAKK,iBAAL,GACGE,IADH,CACQ,UAAAsC,UAAU,EAAI;AAClB,YAAMC,cAAc,sBAAO,IAAIC,GAAJ,CAAQF,UAAU,CAACb,GAAX,CAAe,UAAAgB,IAAI;AAAA,iBAAIA,IAAI,CAACvB,OAAL,CAAaC,IAAjB;AAAA,SAAnB,CAAR,CAAP,CAApB;;AACA,YAAMuB,gBAAgB,sBAAO,IAAIF,GAAJ,CAAQF,UAAU,CAACb,GAAX,CAAe,UAAAgB,IAAI;AAAA,iBAAIA,IAAI,CAACrB,QAAL,CAAcD,IAAlB;AAAA,SAAnB,CAAR,CAAP,CAAtB,CAFkB,CAEgE;;;AAClF,QAAA,MAAI,CAACR,QAAL,CAAc;AACZrB,UAAAA,OAAO,EAAEgD,UADG;AAEZK,UAAAA,gBAAgB,EAAE;AAChB/C,YAAAA,QAAQ,EAAE2C,cADM;AAEhB1C,YAAAA,UAAU,EAAE6C;AAFI;AAFN,SAAd;AAOD,OAXH;AAYD;;;6BAgES;AACRE,MAAAA,OAAO,CAACC,GAAR,CAAY,iBAAZ,EAA+B,KAAKxD,KAAL,CAAWK,aAA1C;AADQ,UAEA2B,UAFA,GAEyH,IAFzH,CAEAA,UAFA;AAAA,UAEYZ,iBAFZ,GAEyH,IAFzH,CAEYA,iBAFZ;AAAA,UAE+BkB,gBAF/B,GAEyH,IAFzH,CAE+BA,gBAF/B;AAAA,UAEiDM,gBAFjD,GAEyH,IAFzH,CAEiDA,gBAFjD;AAAA,UAEmEG,kBAFnE,GAEyH,IAFzH,CAEmEA,kBAFnE;AAAA,UAEuFnB,eAFvF,GAEyH,IAFzH,CAEuFA,eAFvF;AAAA,UAEwG6B,YAFxG,GAEyH,IAFzH,CAEwGA,YAFxG;AAGR,aACE;AAAK,QAAA,SAAS,EAAC,KAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE;AAAK,QAAA,GAAG,EAAC,EAAT;AAAY,QAAA,GAAG,EAAC,EAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADF,EAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,uBAFF,EAGE,oBAAC,WAAD;AACI,QAAA,KAAK,EAAE;AAAEC,UAAAA,MAAM,EAAE,QAAV;AAAoBC,UAAAA,QAAQ,EAAE;AAA9B,SADX;AAEI,QAAA,iBAAiB,EAAEvC,iBAFvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAHF,EAOE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SASE;AAAQ,QAAA,SAAS,EAAC,mBAAlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,yBATF,EAWE;AAAK,QAAA,SAAS,EAAE,KAAKpB,KAAL,CAAWK,aAAX,GAA2B,4BAA3B,GAA0D,iBAA1E;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE,oBAAC,OAAD;AACE,QAAA,UAAU,EAAEuB,eADd;AAEE,QAAA,UAAU,EAAEI,UAFd;AAGE,QAAA,gBAAgB,EAAEM,gBAHpB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADF,EAME,oBAAC,YAAD;AACE,QAAA,aAAa,EAAE,KAAKtC,KAAL,CAAWK,aAAX,IAA4BuC,gBAAgB,CAAC,KAAK5C,KAAL,CAAWK,aAAZ,CAD7D;AAEE,QAAA,UAAU,EAAE2B,UAFd;AAGE,QAAA,kBAAkB,EAAEe,kBAHtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QANF,CAXF,CAPF,CADF;AAkCD;;;;EAnIkBtD,S;;AAsIrB,eAAeM,MAAf","sourcesContent":["import React, { Component } from 'react'\n\nimport StorySearch from '../../components/StorySearch'\nimport StoryFilterSelector from '../../containers/StoryFilterSelector/StoryFilterSelector'\nimport StoryContent from '../../components/StoryContent/StoryContent'\nimport Stories from '../Stories/Stories'\nimport './Digest.css'\n\n// import { unique } from '../../helpers'\n\nconst url = 'http://localhost:3001/api/v1/stories'\n\nclass Digest extends Component {\n  state = {\n    stories: [],\n    searchedStories: [],\n    searchQuery: undefined,\n    selectedStory: undefined,\n    filterMetadata: {\n      websites: [],\n      categories: []\n    }\n  }\n\n  getStoriesFromAPI = () => {\n    return fetch(url)\n      .then(res => res.json())\n  }\n\n  componentDidMount () {\n    this.getStoriesFromAPI()\n      .then(allStories => {\n        const uniqueWebsites = [...new Set(allStories.map(item => item.website.name))]\n        const uniqueCategories = [...new Set(allStories.map(item => item.category.name))] // ES6 Spread Operator and Set return a UNIQUE array\n        this.setState({\n          stories: allStories,\n          filteredMetadata: {\n            websites: uniqueWebsites,\n            categories: uniqueCategories\n          }\n        })\n      })\n  }\n\n  getSearchedStories = (searchQuery) => this.state.stories.filter(story => story.title.toLowerCase().includes(searchQuery.toLowerCase()))\n\n  handleSearchInput = (event) => {\n    this.setState({\n      searchQuery: event.target.value\n    })\n  }\n\n  getStories = () => {\n    const { stories, searchQuery } = this.state\n    if (searchQuery === undefined) {\n      return stories\n    } else {\n      return this.getSearchedStories(searchQuery)\n    }\n  }\n\n  areFiltersEmpty = () => {\n    const { filterMetadata } = this.state\n    return filterMetadata.websites.length === 0 && filterMetadata.categories.length === 0\n  }\n\n  filteredStories = () => {\n    const { filterMetadata } = this.state\n    return this.areFiltersEmpty()\n      ? this.getStories()\n      : this.getStories().filter(story =>\n        filterMetadata.websites.includes(story.website.name) &&\n        filterMetadata.categories.includes(story.category.name)\n      )\n  }\n\n  // toggleFilter = (event, id) => {\n  //   // const filteredWebsite = this.state.filters.websites.map(website =>\n  //   //   event.target.value === id ? { ...website, filterOn: !website.filterOn } : website\n  //   // )\n  //   // this.setState({ XXXXXXXXstories }) \n  // }\n\n  toggleLike = (event, id) => {\n    event.stopPropagation()\n    const likeStories = this.state.stories.map(story =>\n      story.id === id ? { ...story, liked: !story.liked } : story\n    )\n    this.setState({ likeStories })\n  }\n\n  setSelectedStory = story => {\n    const app = document.querySelector('.App')\n    app.classList.add('popup_is_shown')\n    this.setState({ selectedStory: story })\n  }\n\n  getSelectedStory = story => this.state.stories.find(stateStory => stateStory.id === story.id)\n\n  clearSelectedStory = () => {\n    const app = document.querySelector('.App')\n    app.classList.remove('popup_is_shown')\n\n    this.setState({ selectedStory: undefined })\n  }\n\n  render () {\n    console.log('selected story:', this.state.selectedStory)\n    const { toggleLike, handleSearchInput, setSelectedStory, getSelectedStory, clearSelectedStory, filteredStories, toggleFilter } = this\n    return (\n      <div className='App'>\n        <img src='' alt='' />\n        <h1>NEWS DIGEST</h1>\n        <StorySearch\n            style={{ margin: '0 auto', maxWidth: 800 }}\n            handleSearchInput={handleSearchInput}\n          />\n        <div>\n         \n          {/* <div>\n          <button className='filter-btn'>FILTER</button>\n          <StoryFilterSelector\n            filterTags={this.state.filterMetadata}\n            toggleFilter={toggleFilter}\n          />\n          </div> */}\n          <button className='saved-stories-btn'>SAVED STORIES</button>\n\n          <div className={this.state.selectedStory ? 'show_story content_wrapper' : 'content_wrapper'}>\n            <Stories\n              getStories={filteredStories}\n              toggleLike={toggleLike}\n              setSelectedStory={setSelectedStory}\n            />\n            <StoryContent\n              selectedStory={this.state.selectedStory && getSelectedStory(this.state.selectedStory)}\n              toggleLike={toggleLike}\n              clearSelectedStory={clearSelectedStory}\n            />\n          </div>\n        </div>\n      </div>\n    )\n  }\n}\n\nexport default Digest\n"]},"metadata":{},"sourceType":"module"}
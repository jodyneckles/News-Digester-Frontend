{"ast":null,"code":"import _objectSpread from \"/Users/jodyneckles/Dropbox/03_Development/code/projects/News-Digester-Frontend/node_modules/@babel/runtime/helpers/esm/objectSpread\";\nimport _classCallCheck from \"/Users/jodyneckles/Dropbox/03_Development/code/projects/News-Digester-Frontend/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/jodyneckles/Dropbox/03_Development/code/projects/News-Digester-Frontend/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/jodyneckles/Dropbox/03_Development/code/projects/News-Digester-Frontend/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/jodyneckles/Dropbox/03_Development/code/projects/News-Digester-Frontend/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/jodyneckles/Dropbox/03_Development/code/projects/News-Digester-Frontend/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/jodyneckles/Dropbox/03_Development/code/projects/News-Digester-Frontend/src/containers/Digest/Digest.js\";\nimport React, { Component } from 'react';\nimport StorySearch from '../../components/StorySearch';\nimport StoryFilter from '../../components/StoryFilter/StoryFilter';\nimport StoryContent from '../../components/StoryContent/StoryContent';\nimport Stories from '../Stories/Stories';\nimport './Digest.css';\nvar url = 'http://localhost:3001/api/v1/stories';\n\nvar Digest =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(Digest, _Component);\n\n  function Digest() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, Digest);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(Digest)).call.apply(_getPrototypeOf2, [this].concat(args)));\n    _this.state = {\n      stories: [],\n      searchedStories: [],\n      searchQuery: undefined,\n      selectedStory: undefined\n    };\n\n    _this.getStoriesFromAPI = function () {\n      return fetch(url).then(function (res) {\n        return res.json();\n      });\n    };\n\n    _this.getSearchedStories = function (searchQuery) {\n      return _this.state.stories.filter(function (story) {\n        return story.title.toLowerCase().includes(searchQuery.toLowerCase());\n      });\n    };\n\n    _this.handleSearchInput = function (event) {\n      _this.setState({\n        searchQuery: event.target.value\n      });\n    };\n\n    _this.getStories = function () {\n      var _this$state = _this.state,\n          stories = _this$state.stories,\n          searchQuery = _this$state.searchQuery;\n\n      if (searchQuery === undefined) {\n        return stories;\n      } else {\n        return _this.getSearchedStories(searchQuery);\n      }\n    };\n\n    _this.getFilterMetadata = function () {\n      var data = {\n        websites: [],\n        categories: categories\n      };\n\n      var websites = _this.state.stories.map(function (story) {\n        return story.website;\n      }).filter(function (value, index, self) {\n        return self.indexOf(value) === index;\n      });\n\n      return websites;\n    };\n\n    _this.getFilterMetadata = function () {\n      var websites = _this.state.stories.map(function (story) {\n        return story.website;\n      }).filter(function (value, index, self) {\n        return self.indexOf(value) === index;\n      });\n\n      return websites;\n    };\n\n    _this.toggleLike = function (event, id) {\n      event.stopPropagation();\n\n      var stories = _this.state.stories.map(function (story) {\n        return story.id === id ? _objectSpread({}, story, {\n          liked: !story.liked\n        }) : story;\n      });\n\n      _this.setState({\n        stories: stories\n      });\n    };\n\n    _this.setSelectedStory = function (story) {\n      var app = document.querySelector('.App');\n      app.classList.add('popup_is_shown');\n\n      _this.setState({\n        selectedStory: story\n      });\n    };\n\n    _this.getSelectedStory = function (story) {\n      return _this.state.stories.find(function (stateStory) {\n        return stateStory.id === story.id;\n      });\n    };\n\n    _this.clearSelectedStory = function () {\n      var app = document.querySelector('.App');\n      app.classList.remove('popup_is_shown');\n\n      _this.setState({\n        selectedStory: undefined\n      });\n    };\n\n    return _this;\n  }\n\n  _createClass(Digest, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      var _this2 = this;\n\n      this.getStoriesFromAPI().then(function (allStories) {\n        return _this2.setState({\n          stories: allStories\n        });\n      });\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      console.log('selected story:', this.state.selectedStory);\n      var toggleLike = this.toggleLike,\n          handleSearchInput = this.handleSearchInput,\n          setSelectedStory = this.setSelectedStory,\n          getStories = this.getStories,\n          getSelectedStory = this.getSelectedStory,\n          clearSelectedStory = this.clearSelectedStory,\n          getFilterMetadata = this.getFilterMetadata;\n      return React.createElement(\"div\", {\n        className: \"App\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 104\n        },\n        __self: this\n      }, React.createElement(\"img\", {\n        src: \"\",\n        alt: \"\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 105\n        },\n        __self: this\n      }), React.createElement(\"h1\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 106\n        },\n        __self: this\n      }, \"NEWS DIGEST\"), React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 107\n        },\n        __self: this\n      }, React.createElement(StorySearch, {\n        style: {\n          margin: '0 auto',\n          maxWidth: 800\n        },\n        handleSearchInput: handleSearchInput,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 108\n        },\n        __self: this\n      }), React.createElement(\"button\", {\n        className: \"filter-btn\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 112\n        },\n        __self: this\n      }, \"FILTER\"), React.createElement(\"button\", {\n        className: \"saved-stories-btn\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 113\n        },\n        __self: this\n      }, \"SAVED STORIES\"), React.createElement(StoryFilter, {\n        getFilterMetadata: getFilterMetadata,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 114\n        },\n        __self: this\n      }), React.createElement(\"div\", {\n        className: this.state.selectedStory ? 'show_story content_wrapper' : 'content_wrapper',\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 117\n        },\n        __self: this\n      }, React.createElement(Stories, {\n        getStories: getStories,\n        toggleLike: toggleLike,\n        setSelectedStory: setSelectedStory,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 118\n        },\n        __self: this\n      }), React.createElement(StoryContent, {\n        selectedStory: this.state.selectedStory && getSelectedStory(this.state.selectedStory),\n        toggleLike: toggleLike,\n        clearSelectedStory: clearSelectedStory,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 123\n        },\n        __self: this\n      }))));\n    }\n  }]);\n\n  return Digest;\n}(Component);\n\nexport default Digest; // return (\n//   <div className='App'>\n//     {/* <StoryFilter /> */}\n//     {/* <Stories\n//         getStories={getStories}\n//         toggleLike={toggleLike}\n//         setSelectedStory={setSelectedStory}\n//       /> */}\n//     {this.state.selectedStory === undefined\n//       ? <div>\n//         <StorySearch\n//           style={{ margin: '0 auto', maxWidth: 800 }}\n//           handleSearchInput={handleSearchInput}\n//         />\n//         <Stories\n//           getStories={getStories}\n//           toggleLike={toggleLike}\n//           setSelectedStory={setSelectedStory}\n//         />\n//       </div>\n//       : <StoryContent\n//         // story={story}\n//         selectedStory={getSelectedStory(this.state.selectedStory)}\n//         toggleLike={toggleLike}\n//         clearSelectedStory={clearSelectedStory}\n//       />\n//     }\n//   </div>\n// )","map":{"version":3,"sources":["/Users/jodyneckles/Dropbox/03_Development/code/projects/News-Digester-Frontend/src/containers/Digest/Digest.js"],"names":["React","Component","StorySearch","StoryFilter","StoryContent","Stories","url","Digest","state","stories","searchedStories","searchQuery","undefined","selectedStory","getStoriesFromAPI","fetch","then","res","json","getSearchedStories","filter","story","title","toLowerCase","includes","handleSearchInput","event","setState","target","value","getStories","getFilterMetadata","data","websites","categories","map","website","index","self","indexOf","toggleLike","id","stopPropagation","liked","setSelectedStory","app","document","querySelector","classList","add","getSelectedStory","find","stateStory","clearSelectedStory","remove","allStories","console","log","margin","maxWidth"],"mappings":"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","sourcesContent":["import React, { Component } from 'react'\n\nimport StorySearch from '../../components/StorySearch'\nimport StoryFilter from '../../components/StoryFilter/StoryFilter'\nimport StoryContent from '../../components/StoryContent/StoryContent'\nimport Stories from '../Stories/Stories'\nimport './Digest.css'\n\nconst url = 'http://localhost:3001/api/v1/stories'\n\nclass Digest extends Component {\n  state = {\n    stories: [],\n    searchedStories: [],\n    searchQuery: undefined,\n    selectedStory: undefined\n  }\n\n  getStoriesFromAPI = () => {\n    return fetch(url)\n      .then(res => res.json())\n  }\n\n  componentDidMount () {\n    this.getStoriesFromAPI()\n      .then(allStories => this.setState(\n        {\n          stories: allStories\n        }\n      ))\n  }\n\n  getSearchedStories = (searchQuery) => this.state.stories.filter(story => story.title.toLowerCase().includes(searchQuery.toLowerCase()))\n\n  handleSearchInput = (event) => {\n    this.setState({\n      searchQuery: event.target.value\n    })\n  }\n\n  \n\n  getStories = () => {\n    const { stories, searchQuery } = this.state\n    if (searchQuery === undefined) {\n      return stories\n    } else {\n      return this.getSearchedStories(searchQuery)\n    }\n  }\n\n  getFilterMetadata = () => {\n    const data = {\n      websites: [],\n      categories\n      \n    }\n    const websites = this.state.stories.map(story => story.website)\n      .filter((value, index, self) => self.indexOf(value) === index)\n    return websites\n  }\n\n  getFilterMetadata = () => {\n    const websites = this.state.stories.map(story => story.website)\n      .filter((value, index, self) => self.indexOf(value) === index)\n    return websites\n  }\n\n  // toggleFilter = (event, id) => {\n  //   event.stopPropagation()\n  //   const stories = this.state.stories.map(story =>\n  //     story.id === id ? { ...story, liked: !story.liked } : story\n  //   )\n  //   this.setState({ stories })\n  // }\n\n  toggleLike = (event, id) => {\n    event.stopPropagation()\n    const stories = this.state.stories.map(story =>\n      story.id === id ? { ...story, liked: !story.liked } : story\n    )\n    this.setState({ stories })\n  }\n\n  setSelectedStory = story => {\n    const app = document.querySelector('.App')\n    app.classList.add('popup_is_shown')\n    this.setState({ selectedStory: story })\n  }\n\n  getSelectedStory = story => this.state.stories.find(stateStory => stateStory.id === story.id)\n\n  clearSelectedStory = () => {\n    const app = document.querySelector('.App')\n    app.classList.remove('popup_is_shown')\n\n    this.setState({ selectedStory: undefined })\n  }\n\n  render () {\n    console.log('selected story:', this.state.selectedStory)\n    const { toggleLike, handleSearchInput, setSelectedStory, getStories, getSelectedStory, clearSelectedStory, getFilterMetadata } = this\n    return (\n      <div className='App'>\n        <img src='' alt='' />\n        <h1>NEWS DIGEST</h1>\n        <div>\n          <StorySearch\n            style={{ margin: '0 auto', maxWidth: 800 }}\n            handleSearchInput={handleSearchInput}\n          />\n          <button className='filter-btn'>FILTER</button>\n          <button className='saved-stories-btn'>SAVED STORIES</button>\n          <StoryFilter\n            getFilterMetadata={getFilterMetadata}\n          />\n          <div className={this.state.selectedStory ? 'show_story content_wrapper' : 'content_wrapper'}>\n            <Stories\n              getStories={getStories}\n              toggleLike={toggleLike}\n              setSelectedStory={setSelectedStory}\n            />\n            <StoryContent\n              selectedStory={this.state.selectedStory && getSelectedStory(this.state.selectedStory)}\n              toggleLike={toggleLike}\n              clearSelectedStory={clearSelectedStory}\n            />\n          </div>\n        </div>\n      </div>\n    )\n  }\n}\n\nexport default Digest\n\n// return (\n//   <div className='App'>\n//     {/* <StoryFilter /> */}\n//     {/* <Stories\n//         getStories={getStories}\n//         toggleLike={toggleLike}\n//         setSelectedStory={setSelectedStory}\n//       /> */}\n\n//     {this.state.selectedStory === undefined\n//       ? <div>\n//         <StorySearch\n//           style={{ margin: '0 auto', maxWidth: 800 }}\n//           handleSearchInput={handleSearchInput}\n//         />\n//         <Stories\n//           getStories={getStories}\n//           toggleLike={toggleLike}\n//           setSelectedStory={setSelectedStory}\n//         />\n//       </div>\n//       : <StoryContent\n//         // story={story}\n//         selectedStory={getSelectedStory(this.state.selectedStory)}\n//         toggleLike={toggleLike}\n//         clearSelectedStory={clearSelectedStory}\n//       />\n//     }\n//   </div>\n// )\n"]},"metadata":{},"sourceType":"module"}
{"ast":null,"code":"import _defineProperty from \"/Users/flatiron/Desktop/Mod4/News-Digester/News-Digester-Frontend/node_modules/@babel/runtime/helpers/esm/defineProperty\";\nimport _objectSpread from \"/Users/flatiron/Desktop/Mod4/News-Digester/News-Digester-Frontend/node_modules/@babel/runtime/helpers/esm/objectSpread\";\nimport _toConsumableArray from \"/Users/flatiron/Desktop/Mod4/News-Digester/News-Digester-Frontend/node_modules/@babel/runtime/helpers/esm/toConsumableArray\";\nimport _classCallCheck from \"/Users/flatiron/Desktop/Mod4/News-Digester/News-Digester-Frontend/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/flatiron/Desktop/Mod4/News-Digester/News-Digester-Frontend/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/flatiron/Desktop/Mod4/News-Digester/News-Digester-Frontend/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/flatiron/Desktop/Mod4/News-Digester/News-Digester-Frontend/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/flatiron/Desktop/Mod4/News-Digester/News-Digester-Frontend/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/flatiron/Desktop/Mod4/News-Digester/News-Digester-Frontend/src/containers/Digest/Digest.js\";\nimport React, { Component } from 'react';\nimport { Route, Link } from 'react-router-dom';\nimport StorySearch from '../../components/StorySearch';\nimport StoryFilterSelector from '../../containers/StoryFilterSelector/StoryFilterSelector';\nimport StoryFilterResultsBar from '../StoryFilterResultsBar/StoryFilterResultsBar';\nimport StoryContent from '../../components/StoryContent/StoryContent';\nimport Stories from '../Stories/Stories';\nimport './Digest.css'; // import { unique } from '../../helpers'\n\nvar newStoriesUrl = 'http://localhost:3001/api/v1/stories';\nvar savedStoriesUrl = 'http://localhost:3001/api/v1/saved-stories';\n\nvar cheerio = require('cheerio');\n\nvar axios = require('axios');\n\nvar baseURL = \"http://localhost:3001/api/v1/\";\n\nvar JSON = require('circular-json');\n\nvar Digest =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(Digest, _Component);\n\n  function Digest() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, Digest);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(Digest)).call.apply(_getPrototypeOf2, [this].concat(args)));\n    _this.state = {\n      stories: [],\n      searchedStories: [],\n      searchQuery: undefined,\n      selectedStory: undefined,\n      filterMetadata: {\n        websites: [],\n        categories: []\n      },\n      selectedFilters: {\n        websites: [],\n        categories: []\n      },\n      showFilters: false,\n      showSavedStories: false,\n      selectedStoryContentText: undefined,\n      currentUserID: 1\n    };\n\n    _this.getStoriesFromAPI = function () {\n      return fetch(newStoriesUrl).then(function (res) {\n        return res.json();\n      });\n    };\n\n    _this.getSavedStoriesFromApi = function () {\n      return fetch(savedStoriesUrl).then(function (res) {\n        return res.json();\n      });\n    };\n\n    _this.getStoriesOrLikeStories = function () {\n      return _this.state.showSavedStories ? _this.state.stories.filter(function (story) {\n        return story.liked;\n      }) : _this.state.stories;\n    };\n\n    _this.getSearchedStories = function (searchQuery) {\n      return _this.getStoriesOrLikeStories().filter(function (story) {\n        return story.title.toLowerCase().includes(searchQuery.toLowerCase());\n      });\n    };\n\n    _this.handleSearchInput = function (event) {\n      _this.setState({\n        searchQuery: event.target.value\n      });\n    };\n\n    _this.getStories = function () {\n      var searchQuery = _this.state.searchQuery;\n\n      if (searchQuery === undefined) {\n        return _this.getStoriesOrLikeStories();\n      } else {\n        return _this.getSearchedStories(searchQuery);\n      }\n    };\n\n    _this.filteredStories = function () {\n      var selectedFilters = _this.state.selectedFilters;\n      return _this.getStories().filter(function (story) {\n        return selectedFilters.websites.length ? selectedFilters.websites.includes(story.website.name) : true;\n      }).filter(function (story) {\n        return selectedFilters.categories.length ? selectedFilters.categories.includes(story.category.name) : true;\n      });\n    };\n\n    _this.toggleFilter = function (value, type) {\n      var newValues = _toConsumableArray(_this.state.selectedFilters[type]);\n\n      newValues = newValues.includes(value) ? newValues.filter(function (item) {\n        return item !== value;\n      }) : [].concat(_toConsumableArray(newValues), [value]);\n\n      _this.setState({\n        selectedFilters: _objectSpread({}, _this.state.selectedFilters, _defineProperty({}, type, newValues))\n      });\n    };\n\n    _this.createLikeInServer = function (id) {\n      fetch(baseURL + \"user_stories\", {\n        method: 'POST',\n        headers: {\n          'Accept': 'application/json',\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n          story_id: id,\n          user_id: _this.state.currentUserID\n        })\n      });\n    };\n\n    _this.deleteLikeInServer = function (id) {\n      // const targetStory = this.state.stories.find(stateStory => stateStory.id === parseInt(id))\n      console.log(\"like deleted\");\n    };\n\n    _this.toggleLike = function (event, id) {\n      event.stopPropagation();\n      event.preventDefault();\n\n      var storyClone = _toConsumableArray(_this.state.stories);\n\n      var likeStories = storyClone.map(function (story) {\n        return story.id === id ? _objectSpread({}, story, {\n          liked: !story.liked\n        }) : story;\n      });\n\n      _this.setState({\n        stories: likeStories\n      });\n\n      var updatedStory = _this.state.stories.find(function (stateStory) {\n        return stateStory.id === parseInt(id);\n      });\n\n      updatedStory.liked ? _this.createLikeInServer(id) : _this.deleteLikeInServer(id);\n    };\n\n    _this.setSelectedStory = function (story) {\n      var app = document.querySelector('.App');\n      app.classList.add('popup_is_shown');\n\n      _this.setState({\n        selectedStory: story\n      });\n\n      _this.retrieveStoryContentText(story);\n    };\n\n    _this.getSelectedStory = function (id) {\n      var selectedStory = _this.state.stories.find(function (stateStory) {\n        return stateStory.id === parseInt(id);\n      });\n\n      if (selectedStory && !_this.state.selectedStoryContentText) {\n        _this.retrieveStoryContentText(selectedStory);\n\n        var app = document.querySelector('.App');\n        app.classList.add('popup_is_shown');\n      }\n\n      return selectedStory;\n    };\n\n    _this.clearSelectedStory = function () {\n      var app = document.querySelector('.App');\n      app.classList.remove('popup_is_shown');\n\n      _this.setState({\n        selectedStory: undefined\n      });\n    };\n\n    _this.handleShowFilters = function () {\n      _this.setState({\n        showFilters: !_this.state.showFilters\n      });\n    };\n\n    _this.handleShowSavedStories = function () {\n      _this.setState({\n        showSavedStories: !_this.state.showSavedStories\n      });\n    };\n\n    _this.scraperIndependent = function (story) {\n      var storyUrl = story.link;\n      axios.get(storyUrl).then(function (res) {\n        var nodeList = cheerio.load(res.data)('.body-content p');\n        var newList = nodeList.filter(function (i) {\n          return !_toConsumableArray(nodeList[i].children).some(function (el) {\n            return el.name === 'span';\n          });\n        });\n\n        _this.setState({\n          selectedStoryContentText: newList\n        });\n      });\n    };\n\n    _this.scraperGuardian = function (story) {\n      var storyUrl = story.link;\n      axios.get(storyUrl).then(function (res) {\n        var newList = cheerio.load(res.data)('.content__article-body p');\n\n        _this.setState({\n          selectedStoryContentText: newList\n        });\n      });\n    };\n\n    _this.scraperReuters = function (story) {\n      var storyUrl = story.link;\n      axios.get(storyUrl).then(function (res) {\n        var newList = cheerio.load(res.data)('.StandardArticleBody_body p');\n\n        _this.setState({\n          selectedStory: story,\n          selectedStoryContentText: newList\n        });\n      });\n    };\n\n    _this.scraperBBC = function (story) {\n      var storyUrl = story.link;\n      axios.get(storyUrl).then(function (res) {\n        var newList = cheerio.load(res.data)('.story-body__inner p');\n\n        _this.setState({\n          selectedStory: story,\n          selectedStoryContentText: newList\n        });\n      });\n    };\n\n    _this.retrieveStoryContentText = function (story) {\n      var storyScrapeResult = {\n        'Guardian': _this.scraperGuardian,\n        'Reuters': _this.scraperReuters,\n        'BBC': _this.scraperBBC,\n        'Independent': _this.scraperIndependent\n      };\n      var website = story.website.name;\n      return storyScrapeResult[website](story); // envoke ONLY the relevent method above\n    };\n\n    return _this;\n  }\n\n  _createClass(Digest, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      var _this2 = this;\n\n      this.getStoriesFromAPI().then(function (allStories) {\n        var uniqueWebsites = _toConsumableArray(new Set(allStories.map(function (item) {\n          return item.website.name;\n        })));\n\n        var uniqueCategories = _toConsumableArray(new Set(allStories.map(function (item) {\n          return item.category.name;\n        }))); // ES6 Spread Operator and Set return a UNIQUE array\n\n\n        _this2.setState({\n          stories: allStories,\n          filterMetadata: {\n            websites: uniqueWebsites,\n            categories: uniqueCategories\n          }\n        });\n      });\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this3 = this;\n\n      var toggleLike = this.toggleLike,\n          handleSearchInput = this.handleSearchInput,\n          setSelectedStory = this.setSelectedStory,\n          getSelectedStory = this.getSelectedStory,\n          clearSelectedStory = this.clearSelectedStory,\n          filteredStories = this.filteredStories,\n          toggleFilter = this.toggleFilter;\n      return React.createElement(\"div\", {\n        className: \"App\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 236\n        },\n        __self: this\n      }, React.createElement(\"img\", {\n        src: require('../../icons/news-digest-logo.svg'),\n        alt: \"news-digest-logo\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 237\n        },\n        __self: this\n      }), React.createElement(\"h1\", {\n        className: \"news-digest-title\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 238\n        },\n        __self: this\n      }, \"NEWS DIGEST\"), React.createElement(\"button\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 239\n        },\n        __self: this\n      }, \"Logout\"), React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 241\n        },\n        __self: this\n      }, !this.state.showFilters && React.createElement(StorySearch, {\n        style: {\n          margin: '0 auto',\n          maxWidth: 800\n        },\n        handleSearchInput: handleSearchInput,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 243\n        },\n        __self: this\n      }), this.state.showFilters ? React.createElement(\"button\", {\n        className: 'close-btn',\n        onClick: this.handleShowFilters,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 250\n        },\n        __self: this\n      }, \"CLOSE\") : React.createElement(\"button\", {\n        className: this.state.showFilters && 'filter-btn',\n        onClick: this.handleShowFilters,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 251\n        },\n        __self: this\n      }, \"FILTER\"), this.state.showFilters && React.createElement(StoryFilterSelector, {\n        filterTags: this.state.filterMetadata,\n        toggleFilter: toggleFilter,\n        selectedWebsites: this.state.selectedFilters.websites,\n        selectedCategories: this.state.selectedFilters.categories,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 255\n        },\n        __self: this\n      }), !this.state.showFilters && React.createElement(StoryFilterResultsBar, {\n        filterTags: this.state.filterMetadata,\n        toggleFilter: toggleFilter,\n        selectedWebsites: this.state.selectedFilters.websites,\n        selectedCategories: this.state.selectedFilters.categories,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 263\n        },\n        __self: this\n      }), this.state.showSavedStories ? React.createElement(Link, {\n        to: \"/stories\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 272\n        },\n        __self: this\n      }, React.createElement(\"button\", {\n        className: 'saved-stories-back-to-feed-btn',\n        onClick: this.handleShowSavedStories,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 272\n        },\n        __self: this\n      }, \"BACK TO FEED\")) : React.createElement(Link, {\n        to: \"/saved-stories\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 273\n        },\n        __self: this\n      }, React.createElement(\"button\", {\n        className: this.state.showSavedStories && 'saved-stories-btn',\n        onClick: this.handleShowSavedStories,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 273\n        },\n        __self: this\n      }, \"SAVED STORIES\")), React.createElement(\"div\", {\n        className: this.state.selectedStory ? 'show_story content_wrapper' : 'content_wrapper',\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 276\n        },\n        __self: this\n      }, React.createElement(Stories, {\n        getStories: filteredStories,\n        toggleLike: toggleLike,\n        setSelectedStory: setSelectedStory,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 278\n        },\n        __self: this\n      }), React.createElement(Route, {\n        exact: true,\n        path: \"/stories/:id\",\n        component: function component(routerProps) {\n          return React.createElement(StoryContent, Object.assign({\n            selectedStory: getSelectedStory(routerProps.match.params.id),\n            selectedStoryContentText: _this3.state.selectedStoryContentText,\n            toggleLike: toggleLike,\n            clearSelectedStory: clearSelectedStory\n          }, routerProps, {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 285\n            },\n            __self: this\n          }));\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 284\n        },\n        __self: this\n      }))));\n    }\n  }]);\n\n  return Digest;\n}(Component);\n\nexport default Digest;","map":{"version":3,"sources":["/Users/flatiron/Desktop/Mod4/News-Digester/News-Digester-Frontend/src/containers/Digest/Digest.js"],"names":["React","Component","Route","Link","StorySearch","StoryFilterSelector","StoryFilterResultsBar","StoryContent","Stories","newStoriesUrl","savedStoriesUrl","cheerio","require","axios","baseURL","JSON","Digest","state","stories","searchedStories","searchQuery","undefined","selectedStory","filterMetadata","websites","categories","selectedFilters","showFilters","showSavedStories","selectedStoryContentText","currentUserID","getStoriesFromAPI","fetch","then","res","json","getSavedStoriesFromApi","getStoriesOrLikeStories","filter","story","liked","getSearchedStories","title","toLowerCase","includes","handleSearchInput","event","setState","target","value","getStories","filteredStories","length","website","name","category","toggleFilter","type","newValues","item","createLikeInServer","id","method","headers","body","stringify","story_id","user_id","deleteLikeInServer","console","log","toggleLike","stopPropagation","preventDefault","storyClone","likeStories","map","updatedStory","find","stateStory","parseInt","setSelectedStory","app","document","querySelector","classList","add","retrieveStoryContentText","getSelectedStory","clearSelectedStory","remove","handleShowFilters","handleShowSavedStories","scraperIndependent","storyUrl","link","get","nodeList","load","data","newList","i","children","some","el","scraperGuardian","scraperReuters","scraperBBC","storyScrapeResult","allStories","uniqueWebsites","Set","uniqueCategories","margin","maxWidth","routerProps","match","params"],"mappings":"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","sourcesContent":["import React, { Component } from 'react'\nimport { Route, Link } from 'react-router-dom'\n\nimport StorySearch from '../../components/StorySearch'\nimport StoryFilterSelector from '../../containers/StoryFilterSelector/StoryFilterSelector'\nimport StoryFilterResultsBar from '../StoryFilterResultsBar/StoryFilterResultsBar'\nimport StoryContent from '../../components/StoryContent/StoryContent'\nimport Stories from '../Stories/Stories'\nimport './Digest.css'\n\n// import { unique } from '../../helpers'\n\nconst newStoriesUrl = 'http://localhost:3001/api/v1/stories'\nconst savedStoriesUrl = 'http://localhost:3001/api/v1/saved-stories'\nconst cheerio = require('cheerio')\nconst axios = require('axios')\nconst baseURL = \"http://localhost:3001/api/v1/\"\nconst JSON = require('circular-json');\n\nclass Digest extends Component {\n  state = {\n    stories: [],\n    searchedStories: [],\n    searchQuery: undefined,\n    selectedStory: undefined,\n    filterMetadata: {\n      websites: [],\n      categories: []\n    },\n    selectedFilters: {\n      websites: [],\n      categories: []\n    },\n    showFilters: false,\n    showSavedStories: false,\n    selectedStoryContentText: undefined,\n    currentUserID: 1\n  }\n\n  getStoriesFromAPI = () => {\n    return fetch(newStoriesUrl)\n      .then(res => res.json())\n  }\n\n  getSavedStoriesFromApi = () => {\n    return fetch(savedStoriesUrl)\n      .then(res => res.json())\n  }\n\n\n  componentDidMount () {\n    this.getStoriesFromAPI()\n      .then(allStories => {\n        const uniqueWebsites = [...new Set(allStories.map(item => item.website.name))]\n        const uniqueCategories = [...new Set(allStories.map(item => item.category.name))] // ES6 Spread Operator and Set return a UNIQUE array\n        this.setState({\n          stories: allStories,\n          filterMetadata: {\n            websites: uniqueWebsites,\n            categories: uniqueCategories\n          }\n        })\n      })\n  }\n\n  getStoriesOrLikeStories = () => {\n    return this.state.showSavedStories\n      ? this.state.stories.filter(story => story.liked)\n      : this.state.stories\n  }\n\n  getSearchedStories = (searchQuery) => this.getStoriesOrLikeStories().filter(story => story.title.toLowerCase().includes(searchQuery.toLowerCase()))\n\n  handleSearchInput = (event) => {\n    this.setState({\n      searchQuery: event.target.value\n    })\n  }\n\n  getStories = () => {\n    const { searchQuery } = this.state\n    if (searchQuery === undefined) {\n      return this.getStoriesOrLikeStories()\n    } else {\n      return this.getSearchedStories(searchQuery)\n    }\n  }\n\n  // areFiltersEmpty = () => this.state.selectedFilters.website.length\n\n  filteredStories = () => {\n    const { selectedFilters } = this.state\n    return this.getStories().filter(story =>\n      selectedFilters.websites.length ? selectedFilters.websites.includes(story.website.name) : true\n    ).filter(story => selectedFilters.categories.length ? selectedFilters.categories.includes(story.category.name) : true)\n  }\n\n  toggleFilter = (value, type) => {\n    let newValues = [...this.state.selectedFilters[type]]\n    newValues = newValues.includes(value) ? newValues.filter(item => item !== value) : [...newValues, value]\n    this.setState({\n      selectedFilters: {\n        ...this.state.selectedFilters,\n        [type]: newValues\n      }\n    })\n  }\n\n  createLikeInServer = id => {\n    fetch(baseURL + \"user_stories\", {\n        method: 'POST',\n        headers: {\n            'Accept': 'application/json',\n            'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n            story_id: id,\n            user_id: this.state.currentUserID\n        })\n      })\n  }\n\n  deleteLikeInServer = id => {\n    // const targetStory = this.state.stories.find(stateStory => stateStory.id === parseInt(id))\n    console.log(\"like deleted\")\n  }\n\n  toggleLike = (event, id) => {\n    event.stopPropagation()\n    event.preventDefault()\n    const storyClone = [...this.state.stories]\n    const likeStories = storyClone.map(story =>\n      story.id === id ? { ...story, liked: !story.liked } : story\n    )\n    this.setState({ stories: likeStories })\n    const updatedStory = this.state.stories.find(stateStory => stateStory.id === parseInt(id))\n    updatedStory.liked ? this.createLikeInServer(id) : this.deleteLikeInServer(id)\n    }\n\n  setSelectedStory = story => {\n    const app = document.querySelector('.App')\n    app.classList.add('popup_is_shown')\n    this.setState({ selectedStory: story })\n    this.retrieveStoryContentText(story)\n  }\n\n\n\n  getSelectedStory = id => {\n    const selectedStory = this.state.stories.find(stateStory => stateStory.id === parseInt(id))\n    if (selectedStory && !this.state.selectedStoryContentText) {\n      this.retrieveStoryContentText(selectedStory)\n      const app = document.querySelector('.App')\n      app.classList.add('popup_is_shown')\n    }\n    return selectedStory\n  }\n\n  clearSelectedStory = () => {\n    const app = document.querySelector('.App')\n    app.classList.remove('popup_is_shown')\n\n    this.setState({ selectedStory: undefined })\n  }\n\n  handleShowFilters = () => {\n    this.setState({\n      showFilters: !this.state.showFilters\n    })\n  }\n\n  handleShowSavedStories = () => {\n    this.setState({\n      showSavedStories: !this.state.showSavedStories\n    })\n  }\n\n  scraperIndependent = (story) => {\n    const storyUrl = story.link\n    axios.get(storyUrl).then((res) => {\n      const nodeList = cheerio.load(res.data)('.body-content p')\n      const newList = nodeList.filter(i => ![...nodeList[i].children].some(el => el.name === 'span'))\n      this.setState({\n        selectedStoryContentText: newList\n      })\n    })\n  }\n\n  scraperGuardian = (story) => {\n    const storyUrl = story.link\n    axios.get(storyUrl).then((res) => {\n      const newList = cheerio.load(res.data)('.content__article-body p')\n      this.setState({\n        selectedStoryContentText: newList\n      })\n    })\n  }\n\n  scraperReuters = (story) => {\n    const storyUrl = story.link\n    axios.get(storyUrl).then((res) => {\n      const newList = cheerio.load(res.data)('.StandardArticleBody_body p')\n      this.setState({\n        selectedStory: story,\n        selectedStoryContentText: newList\n      })\n    })\n  }\n\n  scraperBBC = (story) => {\n    const storyUrl = story.link\n    axios.get(storyUrl).then((res) => {\n      const newList = cheerio.load(res.data)('.story-body__inner p')\n      this.setState({\n        selectedStory: story,\n        selectedStoryContentText: newList\n      })\n    })\n  }\n\n  retrieveStoryContentText = (story) => {\n    const storyScrapeResult = {\n      'Guardian': this.scraperGuardian,\n      'Reuters': this.scraperReuters,\n      'BBC': this.scraperBBC,\n      'Independent': this.scraperIndependent\n    }\n\n    const website = story.website.name\n    return (storyScrapeResult[website])(story) // envoke ONLY the relevent method above\n  }\n\n  render () {\n    const { toggleLike, handleSearchInput, setSelectedStory, getSelectedStory, clearSelectedStory, filteredStories, toggleFilter } = this\n    return (\n      <div className='App'>\n        <img src={require('../../icons/news-digest-logo.svg')} alt='news-digest-logo' />\n        <h1 className='news-digest-title'>NEWS DIGEST</h1>\n        <button>Logout</button>\n\n        <div>\n          {\n            !this.state.showFilters && <StorySearch\n              style={{ margin: '0 auto', maxWidth: 800 }}\n              handleSearchInput={handleSearchInput}\n            />\n          }\n\n          {this.state.showFilters\n            ? <button className={'close-btn'} onClick={this.handleShowFilters}>CLOSE</button>\n            : <button className={this.state.showFilters && 'filter-btn'} onClick={this.handleShowFilters}>FILTER</button>\n          }\n          {\n            this.state.showFilters &&\n            <StoryFilterSelector\n              filterTags={this.state.filterMetadata}\n              toggleFilter={toggleFilter}\n              selectedWebsites={this.state.selectedFilters.websites}\n              selectedCategories={this.state.selectedFilters.categories}\n            />\n          }\n          {\n            !this.state.showFilters && <StoryFilterResultsBar\n              filterTags={this.state.filterMetadata}\n              toggleFilter={toggleFilter}\n              selectedWebsites={this.state.selectedFilters.websites}\n              selectedCategories={this.state.selectedFilters.categories}\n            />\n\n          }\n          {this.state.showSavedStories\n            ? <Link to='/stories'><button className={'saved-stories-back-to-feed-btn'} onClick={this.handleShowSavedStories}>BACK TO FEED</button></Link>\n            : <Link to='/saved-stories'><button className={this.state.showSavedStories && 'saved-stories-btn'} onClick={this.handleShowSavedStories}>SAVED STORIES</button></Link>\n          }\n\n          <div className={this.state.selectedStory ? 'show_story content_wrapper' : 'content_wrapper'}>\n\n            <Stories\n              getStories={filteredStories}\n              toggleLike={toggleLike}\n              setSelectedStory={setSelectedStory}\n            />\n\n            <Route exact path='/stories/:id' component={routerProps => {\n              return <StoryContent\n                selectedStory={getSelectedStory(routerProps.match.params.id)}\n                selectedStoryContentText={this.state.selectedStoryContentText}\n                toggleLike={toggleLike}\n                clearSelectedStory={clearSelectedStory}\n                {...routerProps}\n              />\n            }\n            }\n            />\n          </div>\n        </div>\n      </div>\n    )\n  }\n}\n\nexport default Digest\n"]},"metadata":{},"sourceType":"module"}